---
title: "Scrape_Abgeordnete_Questions"
format: revealjs
editor: visual
---

# Questions to Abgeordnete

In this script questions and meta-information like date, tag, parliament etc. will be scraped and added to the main dataset.

## Load packages and data

```{r}
library(tidyverse)
library(rvest)
politicians <- read.csv("politicians_v3.csv")
```

## Script to scrape questions and meta-infos

```{r}
profiles <- politicians$Q_A_Link

questions_meta_data <- data.frame(
  Date_q = character(),
  Question_text = character(),
  Question_teaser = character(),
  Question_link = character(),
  #Question_num = numeric(),
  Answer_text = character(),
  Answer_num = numeric(),
  qID = character(),
  Issue = character(),
  Parliament = character()
)


html <- read_html(profiles[1])

# extract date of questions
date_q <- html_elements(html, "div > div.tile__entry:first-child > div > div.tile__politician__info > span.tile__politician__label") %>%
  html_text()  %>%
  str_split("â€¢") 
date_q <- c(date_q[[1]][2],date_q[[2]][2], date_q[[3]][2], date_q[[4]][2], date_q[[5]][2], date_q[[6]][2]) %>%
  trimws("l")

# extract teaser of questions as list
teaser_q <- html_elements(html, "div.tile__question__teaser > a") %>%
  html_text()

# extract link from question teasers as list
link_q <- html_elements(html, "div.tile__question__teaser > a") %>%
  html_attr("href")

# extract teaser of answers as list
teaser_a <- html_elements(html, "div.tile__answer__summary > p") %>%
  html_text()

# generate unique id for each question
qID <- # create unique id



```
