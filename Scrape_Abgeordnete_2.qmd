---
title: "Scrape_Abgeordnete_2"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(stringr)
library(rvest)
politicians <- read.csv("C:\\Users\\shado\\Documents\\Abgeordnete_Kommunikation\\politicians_v2.1.csv", header = TRUE, stringsAsFactors = FALSE, sep = ";")
```

## Profile pages

This script will scrape the profile pages of the Abgeordneten for information about their Abgeordnetenwatch-ID, the number of asked questions, the number of answered questions

```{r}
# remove double entries from dataframe
politicians <- unique(politicians)

profile_urls <- politicians$Profile

data <- data.frame(
  ID = numeric(), 
  No_of_answers = numeric(), 
  No_of_questions = numeric(),
  No_of_question_pages = numeric()
  )

for (i in 1:length(profile_urls)) {  
  
  html <- read_html(profile_urls[i])
  
  # extract stats to questions
  question_stats <- html_elements(html, "div > span.stats__digit") %>%
    html_text() %>%
    str_split("/")

  # convert text to numeric
  questions_answered <- question_stats[[1]][2] %>%
    substr(2, nchar(.)) %>%
    as.numeric()

  # convert text to numeric
  questions_asked <- question_stats[[1]][1] %>%
    substr(1, nchar(.)-1) %>%
    as.numeric()

  # extract politician ID 
  id <- html_element(html, "div.api-link > a") %>%
    html_attr("href") %>%
    str_split("/open-data/info/politician/") 
  id <- as.numeric(id[[1]][2])
  
  # extract the number of question pages
  page <- html_element(html, "div.l-grid__col > nav ul > li:last-child > a") %>%
    html_attr("href") %>%
    str_split("=")
  page <- as.numeric(page[[1]][2])
  
  # add data to dataframe
  data <- rbind(data, list(id, questions_answered, questions_asked, page))
}
```

```{r}
# combine dataframes + export as csv
politicians <- cbind(politicians, data)

# correctly name the columns
names(politicians) <- c("Name", "Party", "Parliament", "Q_A_Link", "ID", "Q_asked", "Q_answered", "No_of_Q_pages")

# remove leading whitespace
politicians$Party <- trimws(politicians$Party, "l")

# set missing values or 6 or less answers to the page number 0 so it is iterable
politicians$No_of_Q_pages[is.na(politicians$No_of_Q_pages)] <- 0

# export dataframe
write.csv(politicians, "C:\\Users\\shado\\Documents\\Abgeordnete_Kommunikation\\politicians_v5.csv", row.names = FALSE)
```
